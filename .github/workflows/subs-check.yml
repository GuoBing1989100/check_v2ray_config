name: Subscription Checker

on:
  schedule:
    - cron: '0 */8 * * *'  # 每8小时运行一次
  workflow_dispatch:        # 允许手动触发

jobs:
  check-subscriptions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create output directory
        run: mkdir -p output  # 确保目录存在
        
      - name: Debug output directory (before run)
        run: |
          echo "=== 运行前的 output 目录内容 ==="
          ls -al output || echo "output 目录为空"
          echo "=== 工作区文件列表 ==="
          ls -al
          
      - name: Run subscription checker with error handling
        run: |
          echo "开始运行订阅检查器（带错误处理）..."
          
          # 使用 timeout 命令防止卡死，忽略所有错误继续执行
          timeout 1h docker run --rm \
            -v ${{ github.workspace }}/config:/app/config \
            -v ${{ github.workspace }}/output:/app/output \
            ghcr.io/jackrun123/subs-check:latest || true
          
          echo "容器运行完成（可能包含错误）"
          echo "=== 运行后的 output 目录内容 ==="
          ls -al output
          
          # 确保关键文件存在
          touch output/all.txt
          touch output/result.txt
          
          echo "=== 有效节点数量统计 ==="
          [ -f output/result.txt ] && echo "有效节点: $(grep -c '^' output/result.txt)" || echo "result.txt 不存在"
          [ -f output/all.txt ] && echo "总节点: $(grep -c '^' output/all.txt)" || echo "all.txt 不存在"
          
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: GuoBing1989100/v2ray_configs
          token: ${{ secrets.PAT_TOKEN }}
          path: target-repo
          
      - name: Copy and commit changes
        run: |
          echo "正在复制文件..."
          cp -rv output/. target-repo/
          
          cd target-repo
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          echo "=== 变更状态 ==="
          git status -s
          
          git add .
          
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
          if git diff-index --quiet HEAD --; then
            echo "没有变更，跳过提交"
          else
            git commit -m "自动更新订阅检查结果 $TIMESTAMP (跳过无效节点)"
            git push
            echo "✅ 提交成功！"
          fi
          
      - name: Final status
        run: |
          echo "=== 最终输出文件内容 ==="
          [ -f target-repo/all.txt ] && echo "all.txt 行数: $(wc -l < target-repo/all.txt)" || echo "all.txt 不存在"
          [ -f target-repo/result.txt ] && echo "result.txt 行数: $(wc -l < target-repo/result.txt)" || echo "result.txt 不存在"
          echo "自动化流程完成"
