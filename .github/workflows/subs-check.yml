name: Subscription Checker

on:
  schedule:
    - cron: '0 */8 * * *'  # 每8小时运行一次
  workflow_dispatch:        # 允许手动触发

jobs:
  check-subscriptions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create output directory
        run: mkdir -p output  # 确保目录存在
        
      - name: Debug output directory (before run)
        run: |
          echo "=== 运行前的 output 目录内容 ==="
          ls -al output || echo "output 目录为空"
          echo "=== 工作区文件列表 ==="
          ls -al
          
      - name: Run subscription checker
        run: |
          echo "开始运行订阅检查器..."
          docker run --rm \
            -v ${{ github.workspace }}/config:/app/config \
            -v ${{ github.workspace }}/output:/app/output \
            ghcr.io/jackrun123/subs-check:latest
          
          echo "=== 运行后的 output 目录内容 ==="
          ls -al output
          echo "=== output 文件内容预览 ==="
          [ -f output/all.txt ] && head -n 3 output/all.txt || echo "all.txt 不存在"
          [ -f output/result.txt ] && head -n 3 output/result.txt || echo "result.txt 不存在"
          
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: GuoBing1989100/v2ray_configs
          token: ${{ secrets.PAT_TOKEN }}
          path: target-repo
          
      - name: Debug target-repo before copy
        run: |
          echo "=== 复制前的 target-repo 目录内容 ==="
          ls -al target-repo
          
      - name: Copy and commit changes
        run: |
          echo "=== 复制前的 output 目录内容 ==="
          ls -al output
          
          # 复制所有文件（包括隐藏文件）
          echo "正在复制文件..."
          cp -rv output/. target-repo/
          
          echo "=== 复制后的 target-repo 目录内容 ==="
          ls -al target-repo
          
          cd target-repo
          echo "=== 变更状态 ==="
          git status -s
          
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add .
          
          # 获取当前时间用于提交信息
          TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
          
          # 仅在检测到变更时提交
          if git diff-index --quiet HEAD --; then
            echo "没有检测到变更，跳过提交"
          else
            echo "检测到变更，正在提交..."
            git commit -m "自动更新订阅检查结果 $TIMESTAMP"
            git push
            echo "✅ 提交成功！"
          fi
