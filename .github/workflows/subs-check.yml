name: V2Ray Subscription Checker

on:
  schedule:
    - cron: '0 */8 * * *'
  workflow_dispatch:

jobs:
  check-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        
      - name: Verify configuration
        run: |
          echo "🔍 验证配置文件..."
          if [ ! -f "config/config.yaml" ]; then
            echo "❌ 错误：未找到配置文件 config/config.yaml"
            exit 1
          fi
          
          # 确保输出目录在配置文件中正确设置
          sed -i 's|output-dir:.*|output-dir: "/app/output"|' config/config.yaml
          echo "✅ 配置文件存在并已更新输出目录"
          echo "输出目录: /app/output"
        
      - name: Setup environment
        run: |
          echo "🛠 准备环境..."
          mkdir -p output
          chmod -R 777 output
          echo "当前目录结构:"
          ls -al
          
      - name: Run subscription checker (fixed)
        run: |
          echo "🚀 开始检查订阅节点 (修复版)..."
          
          # 显示内存信息
          free -h
          
          # 记录开始时间
          START_TIME=$(date +%s)
          
          # 修复的Docker命令 - 使用正确的参数格式
          docker run --rm \
            -v ${{ github.workspace }}/config:/app/config \
            -v ${{ github.workspace }}/output:/app/output \
            ghcr.io/jackrun123/subs-check:latest \
            --config /app/config/config.yaml 2>&1 | tee check.log
          
          # 记录结束时间
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - START_TIME))
          
          echo "⏱ 检查完成! 耗时: $DURATION 秒"
          
          # 显示检查日志摘要
          echo "=== 检查日志摘要 ==="
          grep -E '进度|可用|错误' check.log || echo "无关键日志"
          
          # 确保输出文件存在
          if [ ! -f output/all.txt ]; then
            echo "⚠ 警告: all.txt 未生成，创建空文件"
            touch output/all.txt
          fi
          
          # 显示节点统计
          NODE_COUNT=$(wc -l < output/all.txt)
          echo "📊 有效节点数量: $NODE_COUNT"
          
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: GuoBing1989100/v2ray_configs
          token: ${{ secrets.PAT_TOKEN }}
          path: target-repo
          
      - name: Push results to target repository
        run: |
          echo "📤 推送结果到目标仓库..."
          cp -v output/all.txt target-repo/all.txt
          
          cd target-repo
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add all.txt
          
          if git diff-index --quiet HEAD --; then
            echo "🟢 没有变更，跳过提交"
          else
            NODE_COUNT=$(wc -l < all.txt)
            TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
            git commit -m "自动更新节点列表 ($NODE_COUNT 个节点) $TIMESTAMP"
            git push
            echo "✅ 提交成功! 推送了 $NODE_COUNT 个节点"
          fi
          
      - name: Final verification
        run: |
          echo "🔎 最终验证"
          if [ -f target-repo/all.txt ]; then
            NODE_COUNT=$(wc -l < target-repo/all.txt)
            echo "📦 成功推送 $NODE_COUNT 个节点"
            echo "前5个节点预览:"
            head -n 5 target-repo/all.txt
          else
            echo "❌ 错误: all.txt 未找到"
          fi
          echo "🎉 工作流执行完成"
