name: Robust Subscription Checker

on:
  schedule:
    - cron: '0 */8 * * *'  # 每8小时运行一次
  workflow_dispatch:        # 允许手动触发

jobs:
  check-subscriptions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up environment
        run: |
          # 创建必要目录
          mkdir -p output
          mkdir -p logs
          
          # 初始化空的有效节点文件
          touch output/valid_nodes.txt
          touch output/all_nodes.txt
          
          echo "环境准备完成"
          
      - name: Fetch subscriptions
        run: |
          echo "获取订阅链接..."
          # 这里添加获取订阅链接的实际代码
          # 示例：从配置文件中读取订阅链接
          SUBSCRIPTIONS=$(cat config/subscriptions.txt | grep -v '^#')
          echo "找到订阅链接："
          echo "$SUBSCRIPTIONS"
          echo "$SUBSCRIPTIONS" > output/subscriptions.txt
          
      - name: Process each subscription
        run: |
          echo "开始处理每个订阅链接..."
          while read -r sub_url; do
            if [ -z "$sub_url" ]; then
              continue
            fi
            
            echo "处理订阅: $sub_url"
            
            # 使用安全的检查方法，忽略错误
            docker run --rm \
              -v ${{ github.workspace }}/config:/app/config \
              -v ${{ github.workspace }}/output:/app/output \
              ghcr.io/jackrun123/subs-check:latest \
              --url "$sub_url" \
              --output output/temp_nodes.txt \
              --skip-errors || true
              
            # 将有效节点追加到总文件
            if [ -f output/temp_nodes.txt ]; then
              echo "找到有效节点: $(wc -l < output/temp_nodes.txt)"
              cat output/temp_nodes.txt >> output/valid_nodes.txt
              cat output/temp_nodes.txt >> output/all_nodes.txt
              rm output/temp_nodes.txt
            fi
            
            # 添加分隔标记
            echo "# Subscription: $sub_url" >> output/all_nodes.txt
            echo "" >> output/all_nodes.txt
            
          done < output/subscriptions.txt
          
          echo "所有订阅处理完成"
          
      - name: Finalize output
        run: |
          echo "最终处理有效节点..."
          
          # 确保文件存在
          touch output/valid_nodes.txt
          touch output/all_nodes.txt
          
          # 去重有效节点
          sort -u output/valid_nodes.txt > output/valid_nodes_deduped.txt
          mv output/valid_nodes_deduped.txt output/valid_nodes.txt
          
          # 生成统计信息
          VALID_COUNT=$(wc -l < output/valid_nodes.txt)
          echo "有效节点数量: $VALID_COUNT"
          echo "有效节点数量: $VALID_COUNT" > output/stats.txt
          
          # 创建最终结果文件
          echo "# 有效节点列表" > output/result.txt
          echo "# 生成时间: $(date)" >> output/result.txt
          echo "# 有效节点数: $VALID_COUNT" >> output/result.txt
          echo "" >> output/result.txt
          cat output/valid_nodes.txt >> output/result.txt
          
          echo "输出文件准备完成"
          
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: GuoBing1989100/v2ray_configs
          token: ${{ secrets.PAT_TOKEN }}
          path: target-repo
          
      - name: Copy and commit results
        run: |
          echo "复制结果到目标仓库..."
          
          # 确保目标目录存在
          mkdir -p target-repo
          
          # 复制所有输出文件
          cp -v output/result.txt target-repo/result.txt
          cp -v output/all_nodes.txt target-repo/all_nodes.txt
          cp -v output/stats.txt target-repo/stats.txt
          
          cd target-repo
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # 添加并提交所有文件
          git add .
          
          if git diff-index --quiet HEAD --; then
            echo "没有变更，跳过提交"
          else
            TIMESTAMP=$(date +'%Y-%m-%d %H:%M:%S')
            git commit -m "自动更新订阅检查结果 ($VALID_COUNT 个有效节点) $TIMESTAMP"
            git push
            echo "✅ 提交成功！"
          fi
          
      - name: Final verification
        run: |
          echo "=== 最终验证 ==="
          echo "有效节点文件:"
          wc -l target-repo/result.txt
          echo ""
          echo "所有节点文件:"
          wc -l target-repo/all_nodes.txt
          echo ""
          echo "统计文件:"
          cat target-repo/stats.txt
